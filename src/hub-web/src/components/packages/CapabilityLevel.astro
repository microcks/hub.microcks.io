---
interface Props {
    level: "Incomplete Mocks" | "Full Mocks" | "Mocks + Assertions";
}

const levelByStatus = {
    "Incomplete Mocks": 0,
    "Full Mocks": 1,
    "Mocks + Assertions": 2,
};

const { level: levelStatus } = Astro.props;
const level = levelByStatus[levelStatus];

const isChecked = (currentLevel: number) => level >= currentLevel;
const isDisabled = (currentLevel: number) => level < currentLevel;

const options = [
    { label: "Incomplete Mocks", level: 0 },
    { label: "Full Mocks", level: 1 },
    { label: "Mocks + Assertions", level: 2 },
];
---

<div class="flex flex-col gap-4 mr-2.5 border-s border-gray-200">
    {
        options.map((option, index) => (
            <div class="flex items-center relative">
                <div
                    class="absolute w-5 h-5 rounded-full -start-2.5 border flex items-center justify-center"
                    class:list={[
                        option.level < level && "bg-gray-600",
                        option.level === level && "bg-blue-600",
                        option.level > level && "bg-white",
                    ]}
                />
                <label class="ml-6 text-gray-900 dark:text-white font-medium">
                    {option.label}
                </label>
            </div>
        ))
    }
</div>
